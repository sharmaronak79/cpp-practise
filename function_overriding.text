Operator Overloading: C++ also provide option to overload operators. For example, 
we can make the operator (‘+’) for string class to concatenate two strings.
We know that this is the addition operator whose task is to add two operands.
So a single operator ‘+’ when placed between integer operands , adds them and when placed between string operands, concatenates them.

Example:

// CPP program to illustrate
// Operator Overloading
#include<iostream>
using namespace std;
   
class Complex {
private:
    int real, imag;
public:
    Complex(int r = 0, int i =0)  {real = r;   imag = i;}
       
    // This is automatically called when '+' is used with
    // between two Complex objects
    Complex operator + (Complex const &obj) {
         Complex res;
         res.real = real + obj.real;
         res.imag = imag + obj.imag;
         return res;
    }
    void print() { cout << real << " + i" << imag << endl; }
};
   
int main()
{
    Complex c1(10, 5), c2(2, 4);
    Complex c3 = c1 + c2; // An example call to "operator+"
    c3.print();
}
Output:

12 + i9
In the above example the operator ‘+’ is overloaded. The operator ‘+’ is an addition operator and can add
two numbers(integers or floating point) but here the operator is made to perform addition of two imaginary
or complex numbers. To learn operator overloading in details visit this link.
